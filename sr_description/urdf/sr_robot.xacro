<?xml version="1.0"?>
<robot name="sr_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Import macros -->
  <xacro:arg name="robot_name" default="sr_robot"/>
  <xacro:property name="robot_name" value="$(arg robot_name)"/>
  <xacro:include filename="$(find sr_description)/urdf/macros.xacro" />
  <xacro:include filename="$(find sr_description)/urdf/sr_robot.gazebo" />

  <!-- Constants -->
  <xacro:property name="PI" value="3.1415926535897931"/>

  <!-- Wheels constants -->
  <xacro:property name="wheel_mass" value="3"/>
  <xacro:property name="wheel_radius" value="0.25"/>
  <xacro:property name="wheel_width" value="0.1"/>

  <!-- Chassis constants -->
  <xacro:property name="chassis_mass" value="60"/>
  <xacro:property name="chassis_lenght" value="0.95"/>
  <xacro:property name="chassis_width" value="0.5"/>
  <xacro:property name="chassis_height" value="0.3"/>

  <!-- Robot constants -->
  <xacro:property name="clearence" value="${(wheel_radius-chassis_height/2.0)}"/>
  <xacro:property name="separation" value="${chassis_width+wheel_width+0.05}"/>
  <xacro:property name="axle_offset" value="${chassis_lenght/2-wheel_radius}"/>

  <!-- Caster wheel -->
  <xacro:property name="caster_mass" value="1"/>
  <xacro:property name="caster_radius" value="${clearence/2.0}"/>
  <xacro:property name="caster_offset" value="${caster_radius*1.5}"/>

  <!-- Robot links -->

  <link name="${robot_name}/base_footprint"/>

  <xacro:chassis name="${robot_name}/base"
    mass="${chassis_mass}"
    lenght="${chassis_lenght}"
    width="${chassis_width}"
    height="${chassis_height}"
    clearence="${clearence}"
    axle_offset="${axle_offset}"
  />

  <xacro:wheel name="${robot_name}/wheel_left"
    mass="${wheel_mass}"
    radius="${wheel_radius}"
    width="${wheel_width}"
    dx="0"
    dy="${separation/2.0}"
  />

  <xacro:wheel name="${robot_name}/wheel_right"
    radius="${wheel_radius}"
    width="${wheel_width}"
    mass="${wheel_mass}"
    dx="0"
    dy="-${separation/2.0}"
  />

  <xacro:caster name="${robot_name}/caster"
    radius="${caster_radius}"
    mass="${caster_mass}"
    offset="${caster_offset}"
    dx="${caster_radius+caster_offset-chassis_lenght/2.0-axle_offset}"
  />

  <!-- IMU -->
  <link name="${robot_name}/imu_link" />
  <joint name="${robot_name}/imu_joint" type="fixed">
    <parent link="${robot_name}/base_link" />
    <child link="${robot_name}/imu_link" />
    <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
  </joint>



</robot>
